"""
Django settings for trhproject project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os





# import logging.config
# logging.config.dictConfig(...)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uz@13g0sy&%n5whkwzwlgk3s&)q&!!faheq2932x#6@w83o-l7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework','web',
    ##'drf_api_logger'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware',
]

ROOT_URLCONF = 'trhproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'trhproject.wsgi.application'

# loggers


# '''LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#             'filename':'logger/student.log'
#         },
#     },
#     'root': {
#         'handlers': ['console'],
#         'level': 'WARNING',
#     },
# }'''

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'project',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        
        
}
}

"""{
'student': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'student.db.sqlite3',
    }
}
{
'faculty': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'faculty.db.sqlite3',
    }
}

{
'result': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'result.db.sqlite3',
    }
}

{
'classes': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'classes.db.sqlite3',
    }
}
{
'subject': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'subject.db.sqlite3',
    }
}
{
'salary': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'salary.db.sqlite3',
    }
}

{
'schorship': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'schorship.db.sqlite3',
    }
}

{
'room': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'room.db.sqlite3',
    }
}

{
'provider': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'provider.db.sqlite3',
    }
}

{
'enrolment': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'enrolment.db.sqlite3',
    }
}

{
'tutor': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'tutor.db.sqlite3',
    }
}
"""


DATABASE_ROUTERS =['web.db_router.studentRouter',
'web.db_router.facultyRouter',
'web.db_router.resultRouter',
'web.db_router.classesRouter',
'web.db_router.subjectRouter',
'web.db_router.salaryRouter',
'web.db_router.schorshipRouter',
'web.db_router.roomRouter',
'web.db_router.providerRouter',
'web.db_router.enrolmentRouter',
'web.db_router.tutorRouter',
]
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS=[
    os.path.join(BASE_DIR,"static")
]
MEDIA_ROOT = os.path.join(BASE_DIR, 'web/static')


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#DRF_API_LOGGER_DATABASE = True



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },

     'root': {
        'handlers': ['file'],
        'level': 'DEBUG',
    },

    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            # 'propagate': False,
            'formatter':'simple',
        },
    },

    'formatters':{

        'simple':{

            'format':'{levelname} {message}',
            'style':'{',
        }
    }
}


